version: "3.9"
name: "otus-project"

services:
  project:
    image: otus-project
    build:
      context: ..
      dockerfile: build/Dockerfile
    container_name: otus-project
    depends_on:
      pg-shard:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://user:password@pg-coordinator:5432/project?sslmode=disable
      - REDIS_ADDRESS=redis:6379
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - ETCD_ENDPOINTS=etcd:2379

  pg-coordinator:
    image: citusdata/citus:11.3.0-alpine
    container_name: otus-project-pg-coordinator
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "user" ]
      timeout: 5s
      interval: 10s
      retries: 5
    ports:
      - "5555:5432"
    tmpfs:
      - /var/lib/postgresql/data
    volumes:
      - ./postgres/config.sh:/docker-entrypoint-initdb.d/config.sh
      - ./postgres/coordinator-config.sh:/docker-entrypoint-initdb.d/coordinator-config.sh
    environment: &PG_ENV
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: project
      CITUS_HOST: pg-coordinator

  pg-shard:
    image: citusdata/citus:11.3.0-alpine
    labels: ["com.citusdata.role=Worker"]
    deploy:
      replicas: 3
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "user" ]
      timeout: 5s
      interval: 10s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data
    volumes:
      - ./postgres/config.sh:/docker-entrypoint-initdb.d/config.sh
    environment:
      <<: *PG_ENV
    depends_on:
     manager:
        condition: service_healthy

  manager:
    container_name: otus-project-citus-manager
    image: citusdata/membership-manager:0.3.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    tmpfs:
      - /healthcheck
    environment: *PG_ENV
    depends_on:
      pg-coordinator:
        condition: service_healthy

  redis:
    image: redis:7.0.11-alpine3.18
    container_name: otus-project-redis
    tmpfs:
      - /data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      interval: 1s
      retries: 5

  etcd:
    image: quay.io/coreos/etcd:v3.5.9
    container_name: otus-project-etcd
    environment:
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379

  etcd-keeper:
    image: evildecay/etcdkeeper
    container_name: otus-project-etcd-keeper
    ports:
      - "2380:8080"

  rabbitmq:
    image: rabbitmq:3.11.18-management-alpine
    container_name: otus-project-rabbitmq
    hostname: rabbitmq
    tmpfs:
      - /var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648

  nginx:
    image: nginx:1.23.4-alpine
    container_name: otus-project-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - project

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: otus-project-nginx-exporter
    environment:
      - SCRAPE_URI=http://nginx/nginx_status
      - TELEMETRY_PATH=/metrics
      - NGINX_RETRIES=3
    depends_on:
      - nginx

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: otus-project-node-exporter
    volumes:
      - /:/host:ro,rslave
    command:
      - --path.rootfs=/host

  pg-coordinator-exporter:
    image: prometheuscommunity/postgres-exporter:v0.12.0
    container_name: otus-project-pg-coordinator-exporter
    environment:
      - DATA_SOURCE_NAME=postgres://user:password@pg-coordinator:5432/project?sslmode=disable
    depends_on:
      - pg-coordinator

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: otus-project-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    command:
      - --docker_only=true
    depends_on:
      - pg-coordinator

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: otus-project-prometheus
    ports:
      - "9090:9090"
    tmpfs:
      - /prometheus:mode=1755,size=1g,uid=65534,gid=65534
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=10d
      - --web.enable-lifecycle
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - project

  grafana:
    image: grafana/grafana:9.5.1
    container_name: otus-project-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
